spring:
  application:
    name: todaystock
  datasource:
    url: jdbc:postgresql://34.64.139.2:5432/todaystock
    username: postgres
    password: postgres
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: false
        highlight_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
      logging.level.org.hibernate.SQL: debug
    hibernate:
      ddl-auto: validate
    defer-datasource-initialization: true
  flyway:
    enabled: false
    baseline-on-migrate: true
    locations: classpath:db/migration
    baseline-version: 1
    fail-on-missing-locations: true
    url: jdbc:postgresql://34.64.139.2:5432/todaystock
    user: postgres
    password: postgres
  ai:
    vertex:
      ai:
        gemini:
          project-id: gemstock-431908
          location: asia-northeast3
          chat:
            options:
              model: vertex-pro-vision
              temperature: 0.5

prompt:
  search-info: "1. 주어진 키워드에 대한 소개를 3줄로 작성 \n 2. 만약 키워드가 회사라면 종목코드도 같이 알려줘. \n 3. 소개와 종목코드는 모두 json 형식으로 알려줘. 이 때 json 값에서 소개는 description으로 종목코드는 tickerCode로 표기해줘. \n 4. json 외 추가 부연설명은 하지 않아도 돼."
  recap-news: "1. 앞에 주어진 글 내용을 보고 핵심 내용을 정리해서 작성해줘. 2. 그 다음 뉴스 내용을 토대로 같이 알면 좋을 경제/주식/금융 상식 내용을 같이 정리해줘."

jwt:
  secret: T9bP6Gz3kWuG8JyQvNf4KdU5RcFhJ2LnVsXrDfL7PwMhS9VuQd

naver:
  api:
    client:
      id: YqdE6TImHYdYd7BZxLgC
      secret: 9Xtcun8djN
      uri: "https://openapi.naver.com/v1/search/news.json?query={value}&display=1&sort=sim"

sql:
  init:
    mode: always

logging:
  pattern:
    console: "[%d{HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
  level:
    org:
      hibernate:
        SQL: debug
        type.descriptor.sql: trace